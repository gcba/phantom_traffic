// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Sputnik = {
    loadTemplate: function(templatePath) {
      var template;
      template = void 0;
      $.ajax({
        method: 'GET',
        url: "/static/jst/" + templatePath + ".jst",
        async: false,
        success: function(response) {
          return template = _.template(response);
        }
      });
      return template;
    }
  };

  Sputnik.App = (function(superClass) {
    extend(App, superClass);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      return this.login = new Sputnik.Login();
    };

    App.prototype.renderLogin = function() {
      this.login.render();
      return this.$el.append(this.login.el);
    };

    return App;

  })(Backbone.View);

  Sputnik.Login = (function(superClass) {
    extend(Login, superClass);

    function Login() {
      this.attemptLogin = bind(this.attemptLogin, this);
      this.toggleKeep = bind(this.toggleKeep, this);
      this.onKeyPress = bind(this.onKeyPress, this);
      return Login.__super__.constructor.apply(this, arguments);
    }

    Login.prototype.id = 'wrap';

    Login.prototype.events = {
      'keypress input': 'onKeyPress',
      'click #keep-signin': 'toggleKeep',
      'click #login-btn': 'attemptLogin'
    };

    Login.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('login');
    };

    Login.prototype.render = function() {
      return this.$el.html(this.template());
    };

    Login.prototype.onKeyPress = function(e) {
      var code;
      code = e.keyCode || e.which;
      if (code === 13) {
        return this.attemptLogin();
      }
    };

    Login.prototype.toggleKeep = function() {
      return this.$el.find('#keep-signin').toggleClass('active');
    };

    Login.prototype.attemptLogin = function() {
      var animationEvents, data;
      data = {
        username: this.$el.find('#username').val(),
        password: this.$el.find('#password').val(),
        keep_signed: this.$el.find('#keep-signin').hasClass('active')
      };
      console.log('Mock login', data);
      animationEvents = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';
      this.$el.one(animationEvents, this.hideLogin);
      this.$el.find('input').prop('disabled', true);
      return this.$el.addClass('animated fadeOut');
    };

    Login.prototype.hideLogin = function(e) {
      return console.log(e);
    };

    return Login;

  })(Backbone.View);

}).call(this);
