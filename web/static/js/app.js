// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Sputnik = {
    loadTemplate: function(templatePath) {
      var template;
      template = void 0;
      $.ajax({
        method: 'GET',
        url: "/static/jst/" + templatePath + ".jst",
        async: false,
        success: function(response) {
          return template = _.template(response);
        }
      });
      return template;
    }
  };

  Sputnik.App = (function(superClass) {
    extend(App, superClass);

    function App() {
      this.userSignedIn = bind(this.userSignedIn, this);
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      this.logo = new Sputnik.Logo;
      this.login = new Sputnik.Login;
      this.login.bind('userSignedIn', this.userSignedIn);
      this.disclaimer = new Sputnik.Disclaimer;
      this.header = new Sputnik.Header;
      return this.mainMenu = new Sputnik.MainMenu;
    };

    App.prototype.userSignedIn = function(user) {
      Sputnik.user = user;
      return this.renderMainApp();
    };

    App.prototype.renderLogo = function() {
      this.$el.html('');
      this.logo.render();
      return this.$el.append(this.logo.el);
    };

    App.prototype.renderLogin = function() {
      this.$el.html('');
      this.login.render();
      this.disclaimer.render();
      this.$el.append(this.login.el);
      return this.$el.append(this.disclaimer.el);
    };

    App.prototype.renderMainApp = function() {
      this.$el.html('');
      this.header.render();
      this.mainMenu.render();
      this.disclaimer.render();
      this.$el.append(this.header.el);
      this.$el.append(this.mainMenu.el);
      return this.$el.append(this.disclaimer.el);
    };

    return App;

  })(Backbone.View);

  Sputnik.Disclaimer = (function(superClass) {
    extend(Disclaimer, superClass);

    function Disclaimer() {
      return Disclaimer.__super__.constructor.apply(this, arguments);
    }

    Disclaimer.prototype.id = 'footer';

    Disclaimer.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('disclaimer');
    };

    Disclaimer.prototype.render = function() {
      return this.$el.html(this.template());
    };

    return Disclaimer;

  })(Backbone.View);

  Sputnik.Header = (function(superClass) {
    extend(Header, superClass);

    function Header() {
      return Header.__super__.constructor.apply(this, arguments);
    }

    Header.prototype.id = 'header';

    Header.prototype.className = 'animation fadeIn';

    Header.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('header');
    };

    Header.prototype.render = function() {
      return this.$el.html(this.template());
    };

    return Header;

  })(Backbone.View);

  Sputnik.Login = (function(superClass) {
    extend(Login, superClass);

    function Login() {
      this.attemptLogin = bind(this.attemptLogin, this);
      this.toggleKeep = bind(this.toggleKeep, this);
      this.onKeyPress = bind(this.onKeyPress, this);
      return Login.__super__.constructor.apply(this, arguments);
    }

    Login.prototype.id = 'wrap';

    Login.prototype.events = {
      'keypress input': 'onKeyPress',
      'click #keep-signin': 'toggleKeep',
      'click #login-btn': 'attemptLogin'
    };

    Login.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('login');
    };

    Login.prototype.render = function() {
      return this.$el.html(this.template());
    };

    Login.prototype.onKeyPress = function(e) {
      var code;
      code = e.keyCode || e.which;
      if (code === 13) {
        return this.attemptLogin();
      }
    };

    Login.prototype.toggleKeep = function() {
      return this.$el.find('#keep-signin').toggleClass('active');
    };

    Login.prototype.attemptLogin = function() {
      var animationEvents, data, user;
      data = {
        username: this.$el.find('#username').val(),
        password: this.$el.find('#password').val(),
        keep_signed: this.$el.find('#keep-signin').hasClass('active')
      };
      user = {
        username: 'iheredia',
        name: 'Ignacio',
        surname: 'Heredia',
        img: '/static/imgs/users/iheredia.png'
      };
      console.log('Mock login', data);
      console.log('Mock user', user);
      this.$el.find('input').prop('disabled', true);
      animationEvents = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';
      this.$el.one(animationEvents, (function(_this) {
        return function() {
          return _this.trigger('userSignedIn', user);
        };
      })(this));
      return this.$el.addClass('animated fadeOut');
    };

    return Login;

  })(Backbone.View);

  Sputnik.Logo = (function(superClass) {
    extend(Logo, superClass);

    function Logo() {
      return Logo.__super__.constructor.apply(this, arguments);
    }

    Logo.prototype.id = 'logo-container';

    Logo.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('logo');
    };

    Logo.prototype.render = function() {
      return this.$el.html(this.template());
    };

    return Logo;

  })(Backbone.View);

  Sputnik.MainMenu = (function(superClass) {
    extend(MainMenu, superClass);

    function MainMenu() {
      return MainMenu.__super__.constructor.apply(this, arguments);
    }

    MainMenu.prototype.id = 'main-menu';

    MainMenu.prototype.initialize = function() {
      return this.template = Sputnik.loadTemplate('mainMenu');
    };

    MainMenu.prototype.render = function() {
      return this.$el.html(this.template());
    };

    return MainMenu;

  })(Backbone.View);

}).call(this);
