// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Sputnik = {};

  Sputnik.App = (function(superClass) {
    extend(App, superClass);

    function App() {
      this.attemptLogin = bind(this.attemptLogin, this);
      this.toggleKeep = bind(this.toggleKeep, this);
      this.onKeyPress = bind(this.onKeyPress, this);
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.events = {
      'keypress input': 'onKeyPress',
      'click #keep-signin': 'toggleKeep',
      'click #login-btn': 'attemptLogin'
    };

    App.prototype.onKeyPress = function(e) {
      var code;
      code = e.keyCode || e.which;
      if (code === 13) {
        return this.attemptLogin();
      }
    };

    App.prototype.toggleKeep = function() {
      return this.$el.find('#keep-signin').toggleClass('active');
    };

    App.prototype.attemptLogin = function() {
      var data;
      data = {
        username: this.$el.find('#username').val(),
        password: this.$el.find('#password').val(),
        keep_signed: this.$el.find('#keep-signin').hasClass('active')
      };
      return console.log(data);
    };

    return App;

  })(Backbone.View);

}).call(this);
